# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="DMQWWuIdBuc_VY<ETvnMe[<chan3ZVqVyRFld=[[_==/W^b:6Pc[X=40yZ`d=3Z3"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost/isucon"
db.default.user="isucon"
db.default.password=""
db.default.logStatements=true

# ScalikeJDBC 独自の ConnectionPool 設定
db.default.poolInitialSize=64
db.default.poolMaxSize=64
# db.another.poolValidationQuery=

# グローバル設定
scalikejdbc.global.loggingSQLAndTime.enabled=false
# scalikejdbc.global.loggingSQLAndTime.logLevel=info
# scalikejdbc.global.loggingSQLAndTime.warningEnabled=true
# scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=1000
# scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=ERROR

# Logger provided to your application:
logger.application=ERROR

%production.application.mode=prod
%production.jpa.ddl=create
session.cookieName=isucon_session

play {
    akka {
        event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
        loglevel = ERROR

        actor {
            deployment {
                /actions {
                    router = round-robin
                    nr-of-instances = 1024
                }
            }

            retrieveBodyParserTimeout = 3 second

            actions-dispatcher = {
                fork-join-executor {
                    parallelism-factor = 256
                    parallelism-max = 512
                }
            }
        }
    }
}
